name: CI/CD .NET 5 App (Debug + Dependencies)

on:
  push:
    branches: [ "main" ]

env:
  IMAGE_NAME: schoolsystems

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl3 libicu70 zlib1g

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '5.0.x'

      - name: Restore dependencies
        run: dotnet restore ./SchoolSystems/SchoolSystems.csproj

      - name: Build project with detailed logs
        run: dotnet build ./SchoolSystems/SchoolSystems.csproj --configuration Release --no-restore -v diag

      # مؤقتاً يمكن تعليق هذه الخطوة لمعرفة إذا كانت سبب Exit Code 134
      # - name: Apply EF Core Migrations
      #   run: dotnet ef database update --project ./SchoolSystems/SchoolSystems.csproj --connection "${{ secrets.DB_CONNECTION }}"

      - name: Publish project with detailed logs
        run: dotnet publish ./SchoolSystems/SchoolSystems.csproj -c Release -o ./publish -v diag

      - name: Upload published artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-publish
          path: ./publish/*

  build:
    runs-on: ubuntu-latest
    needs: package
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download published artifacts
        uses: actions/download-artifact@v4
        with:
          name: dotnet-publish
          path: ./publish

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image (with published app)
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }} ./publish

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            docker stop schoolsystems || true
            docker rm schoolsystems || true
            docker run -d -p 8080:80 --name schoolsystems ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

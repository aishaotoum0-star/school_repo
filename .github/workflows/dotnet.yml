name: Build, Test and Dockerize .NET 5 App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: schoolsystems

jobs:
  # --- Job 1: Build & Test ---
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Debug info
      - name: Show .NET version
        run: dotnet --version

      - name: Show full .NET info
        run: dotnet --info

      - name: List project files
        run: ls -la

      - name: Show environment variables
        run: env

      # 3️⃣ Setup .NET 5
      - name: Setup .NET 5 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '5.0.x'

      # 4️⃣ Restore dependencies
      - name: Restore dependencies
        run: dotnet restore

      # 5️⃣ Build solution
      - name: Build solution (Release)
        run: dotnet build SchoolSystems.sln --configuration Release --no-restore
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      # 1️⃣ Checkout code again
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Docker login
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3️⃣ Build Docker image
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest .

      # 4️⃣ Push Docker image
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

  # --- Job 2: Docker Build ---
  docker-build:

      # 6️⃣ Run tests verbose
      - name: Run unit tests (verbose, no parallel)








